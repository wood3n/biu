name: PR Electron Test Build

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    name: Build (${\{ matrix.os \}})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"

      - name: Cache Electron/Rspack (macOS/Linux)
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
            ~/.cache/rspack
          key: pr-${{ runner.os }}-electron-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pr-${{ runner.os }}-electron-

      - name: Cache Electron/Rspack (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\electron\Cache
            ~\AppData\Local\electron-builder\Cache
          key: pr-${{ runner.os }}-electron-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pr-${{ runner.os }}-electron-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          HUSKY: 0

      - name: Build Electron (test mode)
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-artifacts-${{ runner.os }}-${{ github.sha }}
          path: |
            dist/**
          if-no-files-found: warn
          retention-days: 1

      - name: Comment success on PR
        if: ${{ success() }}
        uses: actions/github-script@v7
        env:
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          script: |
            const body = `✅ Electron test build succeeded on **${process.env.RUN_URL.split('/')[6]}** runner.

            • OS: ${context.runner?.os || 'unknown'}
            • Artifacts: Download from the workflow run → ${process.env.RUN_URL}

            _This is an automated build preview for this pull request._`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

      - name: Comment failure on PR
        if: ${{ failure() }}
        uses: actions/github-script@v7
        env:
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          script: |
            const body = `❌ Electron test build failed.

            • OS: ${context.runner?.os || 'unknown'}
            • Logs: See workflow run → ${process.env.RUN_URL}

            Please check the build logs and fix the failure.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
